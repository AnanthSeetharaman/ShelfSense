# -*- coding: utf-8 -*-
"""ShelfSense.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xtnq4xBeYG6PFuSsNoJAcR-JAQ64C48i
"""

import os
HOME = os.getcwd()
print(HOME)

!pip install ultralytics

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="UZVF6ICHpzZhkwOHlBkm")
project = rf.workspace("ananthretail").project("shelfgap")
dataset = project.version(1).download("yolov8")

# Commented out IPython magic to ensure Python compatibility.
!pip install roboflow
# %cd /content/datasets/

from roboflow import Roboflow
rf = Roboflow(api_key="UZVF6ICHpzZhkwOHlBkm")
project = rf.workspace("fr").project("stockout_23_12")
dataset = project.version(1).download("yolov8")

# Commented out IPython magic to ensure Python compatibility.
# %ls -lrt /

from ultralytics import YOLO
#
# # Load a model
model = YOLO('yolov8n.yaml')  # build a new model from YAML
model = YOLO('yolov8n.pt')  # load a pretrained model (recommended for training)
model = YOLO('yolov8n.yaml').load('yolov8n.pt')  # build from YAML and transfer weights
#
# # Train the model
results = model.train(data='data.yaml', epochs=75, imgsz=640)
import torch
# Validating runs\detect\train3\weights\best.pt...

# Load a model
# model = YOLO('yolov8n.pt')  # load an official model
model = YOLO('/content/runs/detect/train2/weights/best.pt')  # load a custom model

# Validate the model
metrics = model.val()  # no arguments needed, dataset and settings remembered
metrics.box.map    # map50-95
metrics.box.map50  # map50
metrics.box.map75  # map75
metrics.box.maps   # a list contains map50-95 of each category

# model = torch.hub.load('WongKinYiu/yolov7', 'custom', 'yolov7-e6e.pt',
#                        force_reload=True, trust_repo=True)
# Predict with the model
results = model('/content/6-Figure15-1.png', save=True, save_crop=False, project="runs/detect", name="inference", exist_ok=True)  # predict on an image

from google.colab import drive
drive.mount('/content/drive')

print(results)

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
!yolo task=detect mode=predict model=yolov8n.pt conf=0.25 source='https://media.roboflow.com/notebooks/examples/dog.jpeg'

model = YOLO(f'/content/runs/detect/train2/weights/best.pt')
results = model.predict(source='shelf-2.jpg', conf=0.25)

!yolo task=detect mode=predict model=/content/runs/detect/train2/weights/best.pt conf=0.25

import glob
from IPython.display import Image, display

for image_path in glob.glob('runs/detect/predict/*.jpg')[:3]:
      display(Image(filename=image_path, width=600))
      print("\n")

"""# New Section"""